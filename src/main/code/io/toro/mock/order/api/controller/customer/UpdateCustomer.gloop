{
    "input": [
        {
            "name": "customerId"
        },
        {
            "name": "customer",
            "type": "model",
            "gloopProperties": [
                {
                    "name": "name",
                    "comments": "The name of the customer."
                },
                {
                    "name": "address",
                    "comments": "The customer's shipping or billing address."
                },
                {
                    "name": "email",
                    "comments": "The customer's email."
                },
                {
                    "name": "phoneNumber",
                    "comments": "The customer's phone number"
                }
            ]
        }
    ],
    "output": [
        {
            "name": "response",
            "type": "model",
            "reference": "io.toro.mock.order.model.APIResponse",
            "gloopProperties": [
                {
                    "name": "customer",
                    "type": "model",
                    "reference": "io.toro.mock.order.model.customer.Customer"
                }
            ]
        },
        {
            "name": "responseCode",
            "type": "integer"
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeGloop",
                    "comments": "Retrieves the customer record to check if it exists",
                    "name": "io.toro.mock.order.api.controller.customer.GetCustomer",
                    "inputs": [
                        {
                            "from": [
                                "customerId"
                            ],
                            "to": [
                                "customerId"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "APIException"
                            ],
                            "to": [
                                "APIException"
                            ]
                        },
                        {
                            "from": [
                                "responseCode"
                            ],
                            "to": [
                                "responseCode"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "comments": "Is the customer record found?",
                    "expression": "responseCode",
                    "children": [
                        {
                            "type": "block",
                            "label": "200",
                            "children": [
                                {
                                    "type": "invokeGloop",
                                    "comments": "Executes an `UPDATE` query to update the fields/columns that was sent in the request",
                                    "name": "io.toro.mock.order.sql.customer.UpdateCustomer",
                                    "declare": [
                                        {
                                            "variables": [
                                                {
                                                    "name": "updated",
                                                    "type": "boolean"
                                                }
                                            ]
                                        }
                                    ],
                                    "inputs": [
                                        {
                                            "from": [
                                                "customer",
                                                "name"
                                            ],
                                            "to": [
                                                "updateCustomerInput",
                                                "name"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "customer",
                                                "address"
                                            ],
                                            "to": [
                                                "updateCustomerInput",
                                                "address"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "customer",
                                                "email"
                                            ],
                                            "to": [
                                                "updateCustomerInput",
                                                "email"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "customer",
                                                "phoneNumber"
                                            ],
                                            "to": [
                                                "updateCustomerInput",
                                                "phoneNumber"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "customerId"
                                            ],
                                            "to": [
                                                "updateCustomerInput",
                                                "customerId"
                                            ]
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "type": "set",
                                            "expression": "200",
                                            "to": [
                                                "responseCode"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "$gloopOutput.updateCount > 0",
                                            "evaluate": true,
                                            "to": [
                                                "updated"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "fork",
                                    "expression": "updated",
                                    "children": [
                                        {
                                            "type": "invokeGloop",
                                            "label": "true",
                                            "name": "io.toro.mock.order.api.controller.customer.GetCustomer",
                                            "inputs": [
                                                {
                                                    "from": [
                                                        "customerId"
                                                    ],
                                                    "to": [
                                                        "customerId"
                                                    ]
                                                }
                                            ],
                                            "outputs": [
                                                {
                                                    "from": [
                                                        "response",
                                                        "customer"
                                                    ],
                                                    "to": [
                                                        "response",
                                                        "customer"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "SUCCESS",
                                                    "to": [
                                                        "response",
                                                        "result"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "Customer record updated successfully.",
                                                    "to": [
                                                        "response",
                                                        "message"
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "label": "false",
                                            "lines": [
                                                {
                                                    "type": "set",
                                                    "expression": "ERROR",
                                                    "to": [
                                                        "APIException",
                                                        "result"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "400",
                                                    "to": [
                                                        "APIException",
                                                        "httpErrorCode"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "Customer record failed to update. Check Martini Logs for more info.",
                                                    "to": [
                                                        "APIException",
                                                        "message"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "400",
                                                    "to": [
                                                        "responseCode"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "label": "$else",
                            "lines": [
                                {
                                    "from": [
                                        "responseCode"
                                    ],
                                    "to": [
                                        "responseCode"
                                    ]
                                },
                                {
                                    "from": [
                                        "APIException"
                                    ],
                                    "to": [
                                        "APIException"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "ERROR",
                                    "to": [
                                        "APIException",
                                        "result"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "type": "set",
                            "expression": "ERROR",
                            "to": [
                                "APIException",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "APIException",
                                "httpErrorCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Encountered an exception while processing the request.",
                            "to": [
                                "APIException",
                                "message"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}