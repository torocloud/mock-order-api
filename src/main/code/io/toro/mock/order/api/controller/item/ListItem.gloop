{
    "output": [
        {
            "name": "response",
            "type": "model",
            "reference": "io.toro.mock.order.model.APIResponse",
            "gloopProperties": [
                {
                    "name": "item",
                    "type": "model",
                    "array": true,
                    "reference": "io.toro.mock.order.model.item.Item"
                }
            ]
        },
        {
            "name": "responseCode",
            "type": "integer",
            "defaultValue": 200
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeGloop",
                    "comments": "Executes a `SELECT` query that pulls all the item record in the database",
                    "name": "io.toro.mock.order.sql.item.SelectAllItem",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "selectAllItemOutputCursor",
                                    "type": "model",
                                    "array": true,
                                    "gloopProperties": [
                                        {
                                            "name": "ITEM_ID",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "ITEM_NAME",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "ITEM_DESCRIPTION",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "PRICE",
                                            "type": "float",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "DATE_CREATED",
                                            "type": "date",
                                            "required": true
                                        },
                                        {
                                            "name": "DATE_UPDATED",
                                            "type": "date",
                                            "required": true
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "selectAllItemInputCursor"
                            ],
                            "to": [
                                "selectAllItemOutputCursor"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "200",
                            "to": [
                                "responseCode"
                            ]
                        }
                    ]
                },
                {
                    "type": "iterate",
                    "comments": "iterate over the output cursor from the previous step",
                    "input": {
                        "path": [
                            "selectAllItemOutputCursor"
                        ]
                    },
                    "output": {
                        "path": [
                            "response",
                            "item"
                        ]
                    },
                    "children": [
                        {
                            "comments": "Map the properties to the appropriate properties in the `item` model",
                            "lines": [
                                {
                                    "from": [
                                        "selectAllItemOutputCursor",
                                        "ITEM_ID"
                                    ],
                                    "to": [
                                        "response",
                                        "item",
                                        "itemId"
                                    ]
                                },
                                {
                                    "from": [
                                        "selectAllItemOutputCursor",
                                        "ITEM_NAME"
                                    ],
                                    "to": [
                                        "response",
                                        "item",
                                        "name"
                                    ]
                                },
                                {
                                    "from": [
                                        "selectAllItemOutputCursor",
                                        "ITEM_DESCRIPTION"
                                    ],
                                    "to": [
                                        "response",
                                        "item",
                                        "description"
                                    ]
                                },
                                {
                                    "from": [
                                        "selectAllItemOutputCursor",
                                        "PRICE"
                                    ],
                                    "to": [
                                        "response",
                                        "item",
                                        "price"
                                    ]
                                },
                                {
                                    "from": [
                                        "selectAllItemOutputCursor",
                                        "DATE_CREATED"
                                    ],
                                    "to": [
                                        "response",
                                        "item",
                                        "dateCreated"
                                    ]
                                },
                                {
                                    "from": [
                                        "selectAllItemOutputCursor",
                                        "DATE_UPDATED"
                                    ],
                                    "to": [
                                        "response",
                                        "item",
                                        "dateUpdated"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "lines": [
                        {
                            "type": "set",
                            "expression": "SUCCESS",
                            "to": [
                                "response",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Successfully fetched items.",
                            "to": [
                                "response",
                                "message"
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "comments": "If the service encountered an exception while processing the request, map a response code of 500 and the appropriate error message.",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "ERROR",
                            "to": [
                                "APIException",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "APIException",
                                "httpErrorCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Encountered an exception while processing the request.",
                            "to": [
                                "APIException",
                                "message"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}