{
    "input": [
        {
            "name": "orderId",
            "required": true,
            "comments": "id of the order"
        }
    ],
    "output": [
        {
            "name": "APIResponse",
            "type": "model",
            "reference": "io.toro.mock.order.model.APIResponse"
        },
        {
            "name": "responseCode",
            "type": "integer",
            "defaultValue": 200
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "paths": [
        "/orders/delete-order/{orderId}"
    ],
    "methods": [
        "DELETE"
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeGloop",
                    "comments": "Get order by ID",
                    "name": "io.toro.mock.order.api.controller.order.GetOrder",
                    "inputs": [
                        {
                            "from": [
                                "orderId"
                            ],
                            "to": [
                                "orderId"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "responseCode"
                            ],
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "from": [
                                "APIException"
                            ],
                            "to": [
                                "APIException"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "comments": "Is the order found?",
                    "expression": "responseCode",
                    "children": [
                        {
                            "type": "block",
                            "label": "200",
                            "comments": "if found",
                            "children": [
                                {
                                    "type": "invokeGloop",
                                    "comments": "Remove the associated order items to the order first",
                                    "name": "io.toro.mock.order.sql.order.item.DeleteMultipleOrderItem",
                                    "inputs": [
                                        {
                                            "from": [
                                                "orderId"
                                            ],
                                            "to": [
                                                "deleteMultipleOrderItemInput",
                                                "orderId"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "invokeGloop",
                                    "comments": "and then delete the order record from the orders table in the database",
                                    "name": "io.toro.mock.order.sql.order.DeleteOrder",
                                    "inputs": [
                                        {
                                            "from": [
                                                "orderId"
                                            ],
                                            "to": [
                                                "deleteOrderInput",
                                                "orderId"
                                            ]
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "type": "set",
                                            "expression": "SUCCESS",
                                            "to": [
                                                "APIResponse",
                                                "result"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "\"Successfully deleted order with id ${orderId}.\"",
                                            "evaluate": true,
                                            "to": [
                                                "APIResponse",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "200",
                                            "to": [
                                                "responseCode"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "comments": "If the service encountered an exception while processing the request, set the response code to 500 and map an error response.",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "ERROR",
                            "to": [
                                "APIException",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "APIException",
                                "httpErrorCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Encountered an exception while processing the request.",
                            "to": [
                                "APIException",
                                "message"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}