{
    "comments": "Update order details",
    "input": [
        {
            "name": "orderId",
            "required": true,
            "comments": "id of the order"
        },
        {
            "name": "order",
            "type": "model",
            "comments": "new body of the order",
            "gloopProperties": [
                {
                    "name": "status",
                    "choices": [
                        "NEW",
                        "PROCESSING",
                        "PENDING",
                        "BACK_ORDER",
                        "COMPLETED",
                        "SHIPPED"
                    ]
                },
                {
                    "name": "customer",
                    "type": "model",
                    "gloopProperties": [
                        {
                            "name": "customerId"
                        }
                    ]
                },
                {
                    "name": "customFields",
                    "type": "model",
                    "allowExtraProperties": true
                }
            ]
        }
    ],
    "output": [
        {
            "name": "response",
            "type": "model",
            "reference": "io.toro.mock.order.model.APIResponse",
            "gloopProperties": [
                {
                    "name": "order",
                    "type": "model",
                    "reference": "io.toro.mock.order.model.order.Order"
                }
            ]
        },
        {
            "name": "responseCode",
            "type": "integer",
            "defaultValue": 200
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "bodyParameter": "order",
    "paths": [
        "/orders/update-order/{orderId}"
    ],
    "methods": [
        "POST"
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeGloop",
                    "comments": "Check if the order being requested exists, by pulling the record from the database",
                    "name": "io.toro.mock.order.api.controller.order.GetOrder",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "tempCustomField",
                                    "type": "model",
                                    "allowExtraProperties": true
                                }
                            ]
                        }
                    ],
                    "inputs": [
                        {
                            "from": [
                                "orderId"
                            ],
                            "to": [
                                "orderId"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "response",
                                "order",
                                "customFields"
                            ],
                            "to": [
                                "tempCustomField"
                            ]
                        },
                        {
                            "from": [
                                "APIException"
                            ],
                            "to": [
                                "APIException"
                            ]
                        },
                        {
                            "from": [
                                "responseCode"
                            ],
                            "to": [
                                "responseCode"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "comments": "Is the order record found?",
                    "expression": "responseCode",
                    "children": [
                        {
                            "type": "block",
                            "label": "200",
                            "children": [
                                {
                                    "type": "invokeGloop",
                                    "comments": "Execute an UPDATE query with the fields that needs updating",
                                    "name": "io.toro.mock.order.sql.order.UpdateOrder",
                                    "declare": [
                                        {
                                            "variables": [
                                                {
                                                    "name": "orderUpdated",
                                                    "type": "boolean"
                                                }
                                            ]
                                        }
                                    ],
                                    "inputs": [
                                        {
                                            "from": [
                                                "orderId"
                                            ],
                                            "to": [
                                                "updateOrderInput",
                                                "orderId"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "order",
                                                "status"
                                            ],
                                            "to": [
                                                "updateOrderInput",
                                                "status"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "order",
                                                "customer",
                                                "customerId"
                                            ],
                                            "to": [
                                                "updateOrderInput",
                                                "customerId"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "order.customFields.isNullValue()? \"{}\" : order.customFields.asJson(false, false)",
                                            "evaluate": true,
                                            "to": [
                                                "updateOrderInput",
                                                "customFields"
                                            ]
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "type": "set",
                                            "expression": "200",
                                            "to": [
                                                "responseCode"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "$gloopOutput.updateCount > 0",
                                            "evaluate": true,
                                            "to": [
                                                "orderUpdated"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "fork",
                                    "expression": "orderUpdated",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "true",
                                            "children": [
                                                {
                                                    "type": "invokeGloop",
                                                    "name": "io.toro.mock.order.api.controller.order.GetOrder",
                                                    "inputs": [
                                                        {
                                                            "from": [
                                                                "orderId"
                                                            ],
                                                            "to": [
                                                                "orderId"
                                                            ]
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "from": [
                                                                "response",
                                                                "order"
                                                            ],
                                                            "to": [
                                                                "response",
                                                                "order"
                                                            ]
                                                        },
                                                        {
                                                            "type": "set",
                                                            "expression": "SUCCESS",
                                                            "to": [
                                                                "response",
                                                                "result"
                                                            ]
                                                        },
                                                        {
                                                            "type": "set",
                                                            "expression": "Order successfully updated.",
                                                            "to": [
                                                                "response",
                                                                "message"
                                                            ]
                                                        },
                                                        {
                                                            "type": "set",
                                                            "expression": "200",
                                                            "to": [
                                                                "responseCode"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "invokeCode",
                                                    "className": "io.toro.martini.LoggerMethods",
                                                    "methodName": "info",
                                                    "parameters": [
                                                        "java.lang.String"
                                                    ],
                                                    "inputs": [
                                                        {
                                                            "type": "set",
                                                            "expression": "response.asJson()",
                                                            "evaluate": true,
                                                            "to": [
                                                                "message"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "label": "false",
                                            "lines": [
                                                {
                                                    "type": "set",
                                                    "expression": "ERROR",
                                                    "to": [
                                                        "APIException",
                                                        "result"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "400",
                                                    "to": [
                                                        "APIException",
                                                        "httpErrorCode"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "Update failed. Check the logs for more info.",
                                                    "to": [
                                                        "APIException",
                                                        "message"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "400",
                                                    "to": [
                                                        "responseCode"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "ERROR",
                            "to": [
                                "APIException",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "APIException",
                                "httpErrorCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Encountered an exception while processing the request.",
                            "to": [
                                "APIException",
                                "message"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}