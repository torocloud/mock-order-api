{
    "comments": "Update status of the order",
    "input": [
        {
            "name": "orderId",
            "required": true,
            "comments": "id of the order"
        },
        {
            "name": "status",
            "required": true,
            "comments": "new status of the order",
            "choices": [
                "NEW",
                "PROCESSING",
                "PENDING",
                "BACK_ORDER",
                "COMPLETED",
                "SHIPPED"
            ]
        }
    ],
    "output": [
        {
            "name": "APIResponse",
            "type": "model",
            "reference": "io.toro.mock.order.model.APIResponse"
        },
        {
            "name": "responseCode",
            "type": "integer",
            "defaultValue": 200
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeGloop",
                    "name": "io.toro.mock.order.api.controller.order.GetOrder",
                    "inputs": [
                        {
                            "from": [
                                "orderId"
                            ],
                            "to": [
                                "orderId"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "responseCode"
                            ],
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "from": [
                                "APIException"
                            ],
                            "to": [
                                "APIException"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "comments": "Is the order record found?",
                    "expression": "responseCode",
                    "children": [
                        {
                            "type": "invokeGloop",
                            "label": "200",
                            "name": "io.toro.mock.order.sql.order.UpdateOrder",
                            "inputs": [
                                {
                                    "from": [
                                        "orderId"
                                    ],
                                    "to": [
                                        "updateOrderInput",
                                        "orderId"
                                    ]
                                },
                                {
                                    "from": [
                                        "status"
                                    ],
                                    "to": [
                                        "updateOrderInput",
                                        "status"
                                    ]
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "set",
                                    "expression": "\"Successfully changed status of order with id ${orderId} to ${status}.\"",
                                    "evaluate": true,
                                    "to": [
                                        "APIResponse",
                                        "message"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "SUCCESS",
                                    "to": [
                                        "APIResponse",
                                        "result"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "200",
                                    "to": [
                                        "responseCode"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "comments": "If the service encountered an exception while processing the request, set the response code to 500 and map an error response",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "ERROR",
                            "to": [
                                "APIException",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "APIException",
                                "httpErrorCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Encountered an exception while processing the request.",
                            "to": [
                                "APIException",
                                "message"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}